version: '3.8'

# NoSQL version

services:
  mongo:
    image: mongo:4.2
    container_name: ship-mongo
    command: --replSet ship-rs --bind_ip_all
    networks:
      - ship
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: redis:6.2.6
    container_name: ship-redis
    networks:
      - ship
  replicator:
    container_name: ship-replicator
    build: ./replicator
    depends_on:
      - mongo
    links:
      - "mongo"
    networks:
      - ship
  api:
    container_name: ship-api
    build:
      context: .
      dockerfile: app/Api.NoSql/Dockerfile
    networks:
     - ship
    depends_on:
      - "replicator"
    links:
      - "mongo"
  signal-r:
    container_name: ship-signal-r
    build:
      context: .
      dockerfile: app/SignalR/Dockerfile
    networks:
     - ship
    volumes:
      - "./src:/app/src"
    depends_on:
      - "api"
    links:
      - "api"
networks:
  ship:
    name: ship_network


# SQL version

#services:
#  postgres:
#    image: postgres:14.2
#    container_name: ship-postgres
#    networks:
#      - ship
#    volumes: 
#      - /var/run/docker.sock:/var/run/docker.sock
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#  redis:
#    image: redis:6.2.6
#    container_name: ship-redis
#    networks:
#      - ship
#  api:
#    container_name: ship-api
#    build:
#      context: .
#      dockerfile: app/Api.Sql/Dockerfile
#    networks:
#      - ship
#    depends_on:
#      postgres:
#        condition: service_healthy
#    command: ["dotnet", "ef", "database update"]
#networks:
#  ship:
#    name: ship